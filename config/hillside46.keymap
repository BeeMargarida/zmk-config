/*
 * Copyright (c) 2021-2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include "keys_pt.h"

#define QWERTY_L 0
#define DVORAK_L 1
#define COLEMK_L 2
#define NAV_L    3
#define SYM_L    4
#define ADJ_L    5
#define Undo   LC(Z)
#define Cut    LC(X)
#define Copy   LC(C)
#define Paste  LC(V)
#define Redo   LC(Y)

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            /* QWERTY
 * -------------------------------------------------------------------------------------------------------------------------------------
 * | `     |   Q   |   W   |   E   |   R   |   T   |-----------------------------------|   Y   |   U   |   I   |   O   |   P   | BKSPC |
 * | TAB   |   A   |   S   |   D   |   F   |   G   |-----------------------------------|   H   |   J   |   K   |   L   |   ;   | ENTER |
 * | CTRL  |   Z   |   X   |   C   |   V   |   B   |  ESC  |-------------------|  CAPS |   N   |   M   |   ,   |   .   |   /   |   '   |
 *                                 |  GUI  |  ALT  |SK SHFT|  Nav  |---|  Sym  | SPACE |  ALT  |  GUI  |
 */

            bindings = <
&kp ESC    &kp Q  &kp W             &kp E        &kp R           &kp T                                                   &kp Y      &kp U       &kp I        &kp O              &kp P         &kp BSPC
&kp TAB    &kp A  &mt LEFT_SHIFT S  &mt LCTRL D  &mt LEFT_ALT F  &kp G                                                   &kp H      &kp J       &mt RCTRL K  &mt RIGHT_SHIFT L  &kp SEMI      &kp QUESTION
&kp LCTRL  &kp Z  &kp X             &kp C        &kp V           &kp B         &kp PT_TILDE                  &caps_word  &kp N      &kp M       &kp COMMA    &kp DOT            &kp PT_ACUTE  &kp PT_APOSTROPHE
                                                 &kp LGUI        &kp LEFT_ALT  &kp SPACE     &mo 1    &mo 3  &mo 2       &kp ENTER  &kp RSHIFT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        sym_layer {
            /* SYM
 * -------------------------------------------------------------------------------------------------------------------------------------
 * | INS   |   !   |   @   |   #   |   $   |   %   |-----------------------------------|   ^   |   &   |   *   |   (   |   )   | BSPC  |
 * |       |   \   |   -   |   =   |   [   |   ]   |-----------------------------------| HOME  | Shift | Ctrl  | Alt   | Gui   | END   |
 * | Ctrl  |   |   |   _   |   +   |   {   |   }   |SkAltGr|-------------------| MENU  | Mute  | Vol-  | Vol+  | Play  |       | Ctrl  |
 *                                 |       |       |       |  ADJ_L |---|      |       |       |       |
 */

            bindings = <
&kp DELETE  &kp EXCL         &kp AT        &kp HASH   &kp DOLLAR           &kp PERCENT                                          &kp CARET           &kp AMPS              &kp ASTRK          &kp LPAR      &kp RPAR          &trans
&trans      &kp PT_N1        &kp PT_N2     &kp PT_N3  &kp PT_N4            &kp PT_N5                                            &kp PT_N6           &kp PT_N7             &kp PT_N8          &kp PT_N9     &kp PT_N0         &none
&trans      &kp PT_QUESTION  &kp PT_MINUS  &kp PLUS   &kp PT_LEFT_BRACKET  &kp PT_LEFT_BRACE  &none                     &none   &kp PT_RIGHT_BRACE  &kp PT_RIGHT_BRACKET  &kp PT_UNDERSCORE  &kp PT_EQUAL  &kp PT_C_CEDILLA  &none
                                                      &trans               &trans             &trans  &trans    &trans  &trans  &trans              &trans
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PG_DN &inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        nav_number_layer {
            /* NAV
 * -------------------------------------------------------------------------------------------------------------------------------------
 * | Copy  |   1   |   2   |   3   |   4   |   5   |-----------------------------------|   6   |   7   |   8   |   9   |   0   | BSPC  |
 * | Cut   |  GUI  |  Alt  | Ctrl  | Shift | Paste |-----------------------------------| PG UP |  Left |  Up   |  Down | Right | PG DN |
 * | Ctrl  |  F1   |  F2   |  F3   |  F4   |  F5   |  UnDo |-------------------| ReDo  |  F6   |  F7   |  F8   |  F9   |  F10  | Ctrl  |
 *                                 |       |       |       |       |---| ADJ_L |       |       |       |
 */

            bindings = <
&trans  &kp PT_PIPE       &kp PT_SLASH         &kp PT_BACKSLASH  &none        &none                                       &kp C_VOLUME_UP    &kp HOME  &kp UP    &kp END    &kp PAGE_UP    &trans
&trans  &kp PT_LESS_THAN  &kp PT_GREATER_THAN  &kp K_COPY        &kp K_PASTE  &kp K_CUT                                   &kp C_VOLUME_DOWN  &kp LEFT  &kp DOWN  &kp RIGHT  &kp PAGE_DOWN  &trans
&trans  &none             &none                &none             &none        &none      &trans                   &trans  &trans             &trans    &trans    &trans     &trans         &trans
                                                                 &trans       &trans     &trans  &mo 3    &trans  &trans  &trans             &trans
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PG_DN &inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        adj_layer {
            bindings = <
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &none                                         &none         &none         &none         &none  &none  &trans
&trans  &kp F5  &kp F6   &kp F7   &kp F8   &none                                         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &none  &none  &trans
&trans  &kp F1  &kp F2   &kp F3   &kp F4   &none   &bt BT_CLR                    &trans  &out OUT_BLE  &out OUT_USB  &none         &none  &none  &trans
                                  &trans   &trans  &trans      &trans    &trans  &trans  &trans        &trans
            >;

            sensor-bindings =
                <&inc_dec_kp PG_UP PG_DN>,
                <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
    };
};
